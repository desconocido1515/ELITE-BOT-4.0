let handler = async (m) => {}
handler.all = async function (m) {
  if (!m.isGroup) return
  if (!m.messageStubType) return
  if (m.messageStubType === 2) return // ignorar mensajes cifrados

  const conn = global.conn
  const chat = global.db.data.chats[m.chat]
  if (!conn || !chat?.detect) return

  const usuario = '@' + m.sender.split('@')[0]
  const stub = m.messageStubType
  const param = m.messageStubParameters?.[0] || ''

  console.log('üì° Evento detectado:', { stub, param })

  let texto

  // Aqu√≠ ponemos los stubs seg√∫n lo que salga en tu consola
  switch (stub) {
    case 26: // abrir/cerrar grupo
      texto = param === 'on'
        ? `‚ù±‚ù± ùó¢ÃÅùó•ùóóùóòùó°ùóòùó¶ ùó•ùóòùóñùóúùóïùóúùóóùóîùó¶ ‚ù∞‚ù∞\n\nüë§ ${usuario}\n¬ª ùóñùóòùó•ùó•ùó¢ÃÅ ùóòùóü ùóöùó•ùó®ùó£ùó¢.\n\n> üí¨ Solo los administradores pueden enviar mensajes.`
        : `‚ù±‚ù± ùó¢ÃÅùó•ùóóùóòùó°ùóòùó¶ ùó•ùóòùóñùóúùóïùóúùóóùóîùó¶ ‚ù∞‚ù∞\n\nüë§ ${usuario}\n¬ª ùóîùóïùó•ùóúùó¢ÃÅ ùóòùóü ùóöùó•ùó®ùó£ùó¢.\n\n> üí¨ Todos los miembros pueden enviar mensajes.`
      break

    case 31: // cambio de nombre (ajusta al n√∫mero que tu consola muestre)
      texto = `‚ú® ${usuario} *ha cambiado el nombre del grupo* ‚ú®\n\n> üìù *Nuevo nombre:* _${param}_`
      break

    case 32: // cambio de icono
      texto = `üì∏ *¬°Nueva foto de grupo!* üì∏\n\n> üí´ Acci√≥n realizada por: ${usuario}`
      break

    case 33: // cambio de descripci√≥n
      texto = `üìù ${usuario} ha cambiado la descripci√≥n del grupo.\n\n> üîπ Nueva descripci√≥n: _${param}_`
      break

    case 34: // restrict edit group
      texto = param === 'on'
        ? `‚öôÔ∏è ${usuario} ha restringido los ajustes del grupo.\n\n> üîí Solo los administradores pueden editar la info del grupo.`
        : `‚öôÔ∏è ${usuario} ha permitido que todos editen los ajustes del grupo.`
      break

    case 174: // promote
      texto = `üëë @${param.split('@')[0]} ahora es administrador.\n\n> Acci√≥n realizada por ${usuario}`
      break

    case 175: // demote
      texto = `‚ùå @${param.split('@')[0]} ya no es administrador.\n\n> Acci√≥n realizada por ${usuario}`
      break

    default:
      console.log('Stub no manejado:', stub, param)
      return
  }

  // Enviar mensaje si se defini√≥ texto
  if (texto) {
    try {
      await conn.sendMessage(m.chat, { text: texto, mentions: [m.sender] })
    } catch (e) {
      console.error('Error enviando mensaje de stub:', e)
    }
  }
}

export default handler
